AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with Public and Private Subnets, IAM Role, Security Group, and EC2 Instance'

Parameters:
  WindowsAMIId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'

Resources:
  TOELabVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: TOELab

  TOELabPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TOELabVPC
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: TOELabPublic

  TOELabPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref TOELabVPC
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: TOELabPrivate

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: TOELab

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref TOELabVPC

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref TOELabPublicSubnet
      Tags:
        - Key: Name
          Value: TOELab

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TOELabVPC
      Tags:
        - Key: Name
          Value: TOELab Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref TOELabPublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref TOELabVPC
      Tags:
        - Key: Name
          Value: TOELab Private Routes

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref TOELabPrivateSubnet

  TOELabRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TOELab
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: TOELab

  TOELabInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: TOELab
      Path: "/"
      Roles:
        - !Ref TOELabRole

  TOELabSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: TOELab
      GroupDescription: Allow inbound and outbound traffic on port 443
      VpcId: !Ref TOELabVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: TOELab

  TOELabEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      ImageId: !Ref WindowsAMIId
      SubnetId: !Ref TOELabPrivateSubnet
      SecurityGroupIds:
        - !Ref TOELabSecurityGroup
      IamInstanceProfile: !Ref TOELabInstanceProfile
      Tags:
        - Key: Name
          Value: TOELab
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
      UserData:
        Fn::Base64: |
          <powershell>
          # Create TOE folder
          New-Item -Path "C:\TOE" -ItemType Directory -Force

          # Create YAML file for custom EC2 Image Builder component
          $yamlContent = @"
          name: CreateDesktopFile
          description: Creates a text file on the desktop
          schemaVersion: 1.0
          phases:
            - name: build
              steps:
                - name: CreateFile
                  action: ExecutePowerShell
                  inputs:
                    commands:
                      - New-Item -Path "$env:USERPROFILE\Desktop\created.txt" -ItemType File -Force
                      - Set-Content -Path "$env:USERPROFILE\Desktop\created.txt" -Value "This file was created by EC2 Image Builder"
          "@

          Set-Content -Path "C:\TOE\custom_component.yml" -Value $yamlContent

          # Download AWS TOE executable
          $toeUrl = "https://awstoe-{region}.s3.amazonaws.com/latest/windows/amd64/awstoe.exe"
          $toeDestination = "C:\TOE\awstoe.exe"

          # Replace {region} with your specific AWS region
          $toeUrl = $toeUrl -replace "{region}", "us-east-1"

          Invoke-WebRequest -Uri $toeUrl -OutFile $toeDestination

          # Create a text file on the desktop
          $desktopPath = [Environment]::GetFolderPath("Desktop")
          New-Item -Path "$desktopPath\created.txt" -ItemType File -Force
          Set-Content -Path "$desktopPath\created.txt" -Value "This file was created by the CloudFormation UserData script"

          # Output a log for verification
          Write-Output "Script execution completed. Check C:\TOE for the YAML file and AWS TOE executable, and the desktop for the created.txt file."
          
          </powershell>

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref TOELabVPC
  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref TOELabPublicSubnet
  PrivateSubnetId:
    Description: Private Subnet ID
    Value: !Ref TOELabPrivateSubnet
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref TOELabEC2Instance
